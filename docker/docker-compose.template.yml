# Docker Compose Template for Cognitive Memory System
# This template is used by setup scripts to generate project-specific configurations
# Variables are substituted by the setup script during deployment

version: '3.8'

services:
  qdrant:
    container_name: "qdrant-${PROJECT_HASH}"
    image: qdrant/qdrant:v1.7.4
    ports:
      - "${QDRANT_PORT}:6333"
    volumes:
      - "${PROJECT_DATA_DIR}/qdrant:/qdrant/storage"
    environment:
      - QDRANT__SERVICE__HTTP_PORT=6333
      - QDRANT__SERVICE__GRPC_PORT=6334
      - QDRANT__LOG_LEVEL=INFO
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6333/health"]
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 10s
    restart: unless-stopped
    networks:
      - cognitive-network

  cognitive-memory:
    container_name: "cognitive-memory-${PROJECT_HASH}"
    build:
      context: .
      dockerfile: docker/Dockerfile
    ports:
      - "${MCP_SERVER_PORT}:8080"
    environment:
      # Project-specific configuration
      - PROJECT_ID=${PROJECT_HASH}
      - PROJECT_PATH=${PROJECT_PATH}

      # Service URLs
      - QDRANT_URL=http://qdrant-${PROJECT_HASH}:6333
      - MCP_SERVER_HOST=0.0.0.0
      - MCP_SERVER_PORT=8080

      # ML Configuration
      - SENTENCE_BERT_MODEL=all-MiniLM-L6-v2
      - PYTHONPATH=/app

      # Storage paths
      - COGNITIVE_MEMORY_DB_PATH=/app/data/cognitive_memory.db
      - QDRANT_COLLECTION_PREFIX=${PROJECT_HASH}

      # Logging
      - LOG_LEVEL=INFO
      - LOG_FORMAT=json
    volumes:
      - "${PROJECT_DATA_DIR}/cognitive:/app/data"
      - "${PROJECT_DATA_DIR}/logs:/app/logs"
      - "${PROJECT_DATA_DIR}/models:/home/cognitive/.cache/torch/sentence_transformers"
    depends_on:
      qdrant:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "/healthcheck.sh"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped
    networks:
      - cognitive-network

volumes:
  qdrant-data:
    name: "cognitive-qdrant-${PROJECT_HASH}"
    driver: local
  cognitive-data:
    name: "cognitive-data-${PROJECT_HASH}"
    driver: local

networks:
  cognitive-network:
    name: "cognitive-network-${PROJECT_HASH}"
    driver: bridge

# Metadata for setup scripts
# PROJECT_HASH: 8-character hash derived from project path
# PROJECT_PATH: Absolute path to project directory
# QDRANT_PORT: Dynamic port allocation (6333 + hash offset)
# MCP_SERVER_PORT: Dynamic port allocation (8080 + hash offset)
# PROJECT_DATA_DIR: Host directory for persistent data storage
